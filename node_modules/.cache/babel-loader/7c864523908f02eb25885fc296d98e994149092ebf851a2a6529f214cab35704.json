{"ast":null,"code":"var _jsxFileName = \"/home/sunwonga/code/web-projects/to-do2/src/components/Map/MainMap.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from 'react';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport Map, { Marker, Popup } from 'react-map-gl';\nimport axios from 'axios';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\n/**\n * '해결사항 : Marker 클릭 했을 시 Popup이 안 나타나는 문제\n *  메인 캘린더에 컴포넌트 부착\n * \tNaver api를 사용한 장소 검색\n */\n\n// Popup 넣을 때 button 스타일 지정\n// import './MainMap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainMap = () => {\n  _s();\n  // 검색한 위치 정보 담긴 Array\n  const [pois, setPois] = useState([{\n    geometry: {\n      coordinates: [127, 37]\n    }\n  }]);\n  // 클릭한 Marker의 정보를 확인하기 위한 state\n  const [selectedPoi, setSelectedPoi] = useState(null);\n\n  // API 작동 확인용 위치 검색 함수\n  const onSearch = async e => {\n    const inputNode = e.target.parentNode.children[0];\n    const searchText = inputNode.value;\n    const res = await axios(`https://api.mapbox.com/geocoding/v5/mapbox.places/${searchText}.json?access_token=pk.eyJ1Ijoic3Vud29uZ2EiLCJhIjoiY2w4eWxkNDZ5MGh2dDN3dDV2ZjNma2M2MiJ9.uRRO8IUZTFjCbk7Jn8q3ng&types=poi`);\n    setPois(res.data.features);\n  };\n\n  // 마커 클릭 했을 시 Popup 출력하게 state 변경\n  const onClickMarker = (longitude, latitude) => {\n    setSelectedPoi({\n      geometry: {\n        coordinates: [longitude, latitude]\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(InputGroup, {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: onSearch,\n        children: \"search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Map, {\n      initialViewState: {\n        longitude: 127,\n        latitude: 37,\n        zoom: 10\n      },\n      style: {\n        width: '500px',\n        height: '500px'\n      },\n      mapStyle: \"mapbox://styles/mapbox/streets-v9\",\n      mapboxAccessToken: \"pk.eyJ1Ijoic3Vud29uZ2EiLCJhIjoiY2w4eWxkNDZ5MGh2dDN3dDV2ZjNma2M2MiJ9.uRRO8IUZTFjCbk7Jn8q3ng\",\n      children: pois.map((poi, i) => /*#__PURE__*/_jsxDEV(Marker, {\n        longitude: poi.geometry.coordinates[0],\n        latitude: poi.geometry.coordinates[1],\n        color: 'red'\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n_s(MainMap, \"YRB8QS7ARo5QWcwYEP7xlDMnWeA=\");\n_c = MainMap;\nexport default MainMap;\nvar _c;\n$RefreshReg$(_c, \"MainMap\");","map":{"version":3,"names":["React","useState","Button","Form","InputGroup","Map","Marker","Popup","axios","MainMap","pois","setPois","geometry","coordinates","selectedPoi","setSelectedPoi","onSearch","e","inputNode","target","parentNode","children","searchText","value","res","data","features","onClickMarker","longitude","latitude","zoom","width","height","map","poi","i"],"sources":["/home/sunwonga/code/web-projects/to-do2/src/components/Map/MainMap.jsx"],"sourcesContent":["import { React, useState } from 'react';\nimport { Button, Form, InputGroup } from 'react-bootstrap';\nimport Map, { Marker, Popup } from 'react-map-gl';\nimport axios from 'axios';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\n/**\n * '해결사항 : Marker 클릭 했을 시 Popup이 안 나타나는 문제\n *  메인 캘린더에 컴포넌트 부착\n * \tNaver api를 사용한 장소 검색\n */\n\n// Popup 넣을 때 button 스타일 지정\n// import './MainMap.css';\n\nconst MainMap = () => {\n\t// 검색한 위치 정보 담긴 Array\n\tconst [pois, setPois] = useState([{ geometry: { coordinates: [127, 37] } }]);\n\t// 클릭한 Marker의 정보를 확인하기 위한 state\n\tconst [selectedPoi, setSelectedPoi] = useState(null);\n\n\t// API 작동 확인용 위치 검색 함수\n\tconst onSearch = async (e) => {\n\t\tconst inputNode = e.target.parentNode.children[0];\n\t\tconst searchText = inputNode.value;\n\t\tconst res = await axios(\n\t\t\t`https://api.mapbox.com/geocoding/v5/mapbox.places/${searchText}.json?access_token=pk.eyJ1Ijoic3Vud29uZ2EiLCJhIjoiY2w4eWxkNDZ5MGh2dDN3dDV2ZjNma2M2MiJ9.uRRO8IUZTFjCbk7Jn8q3ng&types=poi`\n\t\t);\n\t\tsetPois(res.data.features);\n\t};\n\n\t// 마커 클릭 했을 시 Popup 출력하게 state 변경\n\tconst onClickMarker = (longitude, latitude) => {\n\t\tsetSelectedPoi({ geometry: { coordinates: [longitude, latitude] } });\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<InputGroup className='mb-3'>\n\t\t\t\t<Form.Control />\n\t\t\t\t<Button variant='success' onClick={onSearch}>\n\t\t\t\t\tsearch\n\t\t\t\t</Button>\n\t\t\t</InputGroup>\n\t\t\t<Map\n\t\t\t\tinitialViewState={{\n\t\t\t\t\tlongitude: 127,\n\t\t\t\t\tlatitude: 37,\n\t\t\t\t\tzoom: 10,\n\t\t\t\t}}\n\t\t\t\tstyle={{ width: '500px', height: '500px' }}\n\t\t\t\tmapStyle='mapbox://styles/mapbox/streets-v9'\n\t\t\t\tmapboxAccessToken='pk.eyJ1Ijoic3Vud29uZ2EiLCJhIjoiY2w4eWxkNDZ5MGh2dDN3dDV2ZjNma2M2MiJ9.uRRO8IUZTFjCbk7Jn8q3ng'\n\t\t\t>\n\t\t\t\t{pois.map((poi, i) => (\n\t\t\t\t\t<Marker key={i} longitude={poi.geometry.coordinates[0]} latitude={poi.geometry.coordinates[1]} color={'red'}></Marker>\n\t\t\t\t))}\n\t\t\t</Map>\n\t\t</div>\n\t);\n};\n\nexport default MainMap;\n"],"mappings":";;AAAA,SAASA,KAAK,EAAEC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,EAAEC,IAAI,EAAEC,UAAU,QAAQ,iBAAiB;AAC1D,OAAOC,GAAG,IAAIC,MAAM,EAAEC,KAAK,QAAQ,cAAc;AACjD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;;AAErC;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;EACrB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;IAAEW,QAAQ,EAAE;MAAEC,WAAW,EAAE,CAAC,GAAG,EAAE,EAAE;IAAE;EAAE,CAAC,CAAC,CAAC;EAC5E;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;;EAEpD;EACA,MAAMe,QAAQ,GAAG,MAAOC,CAAC,IAAK;IAC7B,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,UAAU,CAACC,QAAQ,CAAC,CAAC,CAAC;IACjD,MAAMC,UAAU,GAAGJ,SAAS,CAACK,KAAK;IAClC,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CACrB,qDAAoDc,UAAW,yHAAwH,CACxL;IACDX,OAAO,CAACa,GAAG,CAACC,IAAI,CAACC,QAAQ,CAAC;EAC3B,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,CAACC,SAAS,EAAEC,QAAQ,KAAK;IAC9Cd,cAAc,CAAC;MAAEH,QAAQ,EAAE;QAAEC,WAAW,EAAE,CAACe,SAAS,EAAEC,QAAQ;MAAE;IAAE,CAAC,CAAC;EACrE,CAAC;EACD,oBACC;IAAA,wBACC,QAAC,UAAU;MAAC,SAAS,EAAC,MAAM;MAAA,wBAC3B,QAAC,IAAI,CAAC,OAAO;QAAA;QAAA;QAAA;MAAA,QAAG,eAChB,QAAC,MAAM;QAAC,OAAO,EAAC,SAAS;QAAC,OAAO,EAAEb,QAAS;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEnC;IAAA;MAAA;MAAA;MAAA;IAAA,QACG,eACb,QAAC,GAAG;MACH,gBAAgB,EAAE;QACjBY,SAAS,EAAE,GAAG;QACdC,QAAQ,EAAE,EAAE;QACZC,IAAI,EAAE;MACP,CAAE;MACF,KAAK,EAAE;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAC3C,QAAQ,EAAC,mCAAmC;MAC5C,iBAAiB,EAAC,4FAA4F;MAAA,UAE7GtB,IAAI,CAACuB,GAAG,CAAC,CAACC,GAAG,EAAEC,CAAC,kBAChB,QAAC,MAAM;QAAS,SAAS,EAAED,GAAG,CAACtB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAE;QAAC,QAAQ,EAAEqB,GAAG,CAACtB,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAE;QAAC,KAAK,EAAE;MAAM,GAA/FsB,CAAC;QAAA;QAAA;QAAA;MAAA,QACd;IAAC;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACD;AAER,CAAC;AAAC,GA5CI1B,OAAO;AAAA,KAAPA,OAAO;AA8Cb,eAAeA,OAAO;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}